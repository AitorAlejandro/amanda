{"version":3,"file":"amanda.cjs.production.min.js","sources":["../src/isArray.ts","../src/capitalize.ts","../src/decapitalize.ts","../src/isBoolean.ts","../src/isEmptyArray.ts","../src/isNull.ts","../src/isNumber.ts","../src/isPrimitive.ts","../src/isString.ts"],"sourcesContent":["export function isArray(arr: any): boolean {\n  return Array.isArray(arr);\n}\n","export function capitalize(str: string): string {\n  return `${str.charAt(0).toUpperCase()}${str.slice(1)}`;\n}\n","export function decapitalize(str: string): string {\n  return `${str.charAt(0).toLowerCase()}${str.slice(1)}`;\n}\n","export function isBoolean(value: any): boolean {\n  return 'boolean' == typeof value;\n}\n","import { isArray } from './isArray';\n\nexport function isEmptyArray(arr: any): boolean {\n  if (isArray(arr)) {\n    return arr.length === 0;\n  }\n  throw new Error('isEmptyArray: An array must be provided as an argument');\n}\n","export function isNull(value: any): boolean {\n  return null === value;\n}\n","export function isNumber(value: any): boolean {\n  return 'number' === typeof value  && isFinite(value);\n}\n","export function isPrimitive(val: any): boolean {\n  return Object(val) !== val;\n}\n","export function isString(value: any): boolean {\n  return typeof value === 'string' || value instanceof String;\n}\n"],"names":["isArray","arr","Array","str","charAt","toUpperCase","slice","toLowerCase","value","length","Error","isFinite","val","Object","String"],"mappings":"sBAAgBA,EAAQC,UACfC,MAAMF,QAAQC,sFCDIE,YACfA,EAAIC,OAAO,GAAGC,cAAgBF,EAAIG,MAAM,kCCDvBH,YACjBA,EAAIC,OAAO,GAAGG,cAAgBJ,EAAIG,MAAM,iDCD1BE,SACjB,kBAAoBA,iCCCAP,MACvBD,EAAQC,UACY,IAAfA,EAAIQ,aAEP,IAAIC,MAAM,mFCNKF,UACd,OAASA,6BCDOA,SAChB,iBAAoBA,GAAUG,SAASH,iCCDpBI,UACnBC,OAAOD,KAASA,6BCDAJ,SACC,iBAAVA,GAAsBA,aAAiBM"}