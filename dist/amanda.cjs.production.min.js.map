{"version":3,"file":"amanda.cjs.production.min.js","sources":["../src/isArray.ts","../src/isNull.ts","../src/buildQuery.ts","../src/capitalize.ts","../src/decapitalize.ts","../src/isBoolean.ts","../src/isEmptyArray.ts","../src/isFunction.ts","../src/isNumber.ts","../src/isObject.ts","../src/isPrimitive.ts","../src/isString.ts"],"sourcesContent":["export function isArray(arr: any): boolean {\n  return Array.isArray(arr);\n}\n","export function isNull(value: any): boolean {\n  return null === value;\n}\n","export function buildQuery(data: Record<string, string | string[]>): string {\n  const queryArray: string[][] = [];\n\n  for (const property in data) {\n    if (Array.isArray(data[property])) {\n      const dataProperty: string[] =  data[property] as string[];\n      dataProperty.forEach(item => {\n        queryArray.push([property, item]);\n      });\n    } else {\n      queryArray.push([property, data[property] as string]);\n    }\n  }\n\n  const query = new URLSearchParams(queryArray).toString();\n  return query;\n}\n","export function capitalize(str: string): string {\n  return `${str.charAt(0).toUpperCase()}${str.slice(1)}`;\n}\n","export function decapitalize(str: string): string {\n  return `${str.charAt(0).toLowerCase()}${str.slice(1)}`;\n}\n","export function isBoolean(value: any): boolean {\n  return 'boolean' == typeof value;\n}\n","import { isArray } from './isArray';\n\nexport function isEmptyArray(arr: any): boolean {\n  if (isArray(arr)) {\n    return arr.length === 0;\n  }\n  throw new Error('isEmptyArray: An array must be provided as an argument');\n}\n","export function isFunction(value: any): boolean {\n  return 'function' == typeof value;\n}\n","export function isNumber(value: any): boolean {\n  return 'number' === typeof value && isFinite(value);\n}\n","import { isArray } from './isArray';\nimport { isNull } from './isNull';\n\nexport function isObject(value: any): boolean {\n  return typeof value === 'object' && !isArray(value) && !isNull(value);\n}\n","export function isPrimitive(val: any): boolean {\n  return Object(val) !== val;\n}\n","export function isString(value: any): boolean {\n  return typeof value === 'string' || value instanceof String;\n}\n"],"names":["isArray","arr","Array","isNull","value","data","queryArray","property","forEach","item","push","URLSearchParams","toString","str","charAt","toUpperCase","slice","toLowerCase","length","Error","isFinite","val","Object","String"],"mappings":"sBAAgBA,EAAQC,UACfC,MAAMF,QAAQC,YCDPE,EAAOC,UACd,OAASA,qFCDSC,OACnBC,EAAyB,cAEpBC,GACLL,MAAMF,QAAQK,EAAKE,IACWF,EAAKE,GACxBC,SAAQ,SAAAC,GACnBH,EAAWI,KAAK,CAACH,EAAUE,OAG7BH,EAAWI,KAAK,CAACH,EAAUF,EAAKE,UAP/B,IAAMA,KAAYF,IAAZE,UAWG,IAAII,gBAAgBL,GAAYM,wCCdrBC,YACfA,EAAIC,OAAO,GAAGC,cAAgBF,EAAIG,MAAM,kCCDvBH,YACjBA,EAAIC,OAAO,GAAGG,cAAgBJ,EAAIG,MAAM,iDCD1BZ,SACjB,kBAAoBA,iCCCAH,MACvBD,EAAQC,UACY,IAAfA,EAAIiB,aAEP,IAAIC,MAAM,uFCNSf,SAClB,mBAAqBA,8CCDLA,SAChB,iBAAoBA,GAASgB,SAAShB,8BCEtBA,SACC,iBAAVA,IAAuBJ,EAAQI,KAAWD,EAAOC,iCCJrCiB,UACnBC,OAAOD,KAASA,6BCDAjB,SACC,iBAAVA,GAAsBA,aAAiBmB"}